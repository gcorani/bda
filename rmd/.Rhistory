from scipy.stats import beta
q = beta.ppf(q=0.5, a=0.5, b=0.5, loc=0, scale=1)
q
from scipy.stats import beta
q = beta.ppf(q=[0.05,0.95],a=0.5, b=0.5, loc=0, scale=1)
q
from scipy.stats import beta
q1 = beta.ppf(q=[0.05,0.95],a=7, b=3, loc=0, scale=1)
q2 = beta.ppf(q=[0.05,0.95],a=28, b=12, loc=0, scale=1)
q1
q2
from scipy.stats import beta
q1 = beta.ppf(q=[0.05,0.95],a=7, b=3, loc=0, scale=1)
q2 = beta.ppf(q=[0.05,0.95],a=28, b=12, loc=0, scale=1)
q1
q2
pnorm(0)
delta <- 0.5
sigma <- 1.262490933
n <- 8
pot <- 1 -
(pnorm(1.96 - delta * sqrt(n) / sigma) - pnorm(-1.96 - delta * sqrt(n) / sigma))
pot
pnorm(1.96 - delta * sqrt(n) / sigma)
pnorm(1.96)
pnorm(2.24)
qnorm(0)
pnorm(0)
pnorm(1.645)
p<-.85
(.85 - .7) / ( sqrt(.85 * .15)/sqrt(23))
pnorm(0)
pnorm(3 - 2) - pnorm(-3 - 2)
# Declare variables of different types
my_numeric <- 42
my_character <- "universe"
my_logical <- FALSE
# Check value and class of my_numeric in console
my_numeric
class(my_numeric)
#In R, you create a vector with the combine function c().
numeric_vector <- c(1, 10, 49)
#sum of vectors works elementwise
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the element-wise sum of A_vector and B_vector
total_vector <- A_vector + B_vector
#For example: suppose you want to select the first element of A_vector:
A_vector[1] #1
B_vector[2] #5
#first and second element of B_vector
idx <- c(1,2)
B_vector[idx]
#selection of element of a matrix
myMatrix <- matrix(data=c(1,2,3,4,5,6), nrow=2, ncol = 3)
#plot the matrix in console
myMatrix
#select the element in position 1,1
myMatrix[1,1] #1
#select the first row (the empty index after the comma select the entire row)
myMatrix[1,] #1 3 5
#select the second column
myMatrix[,2] #3 4
#tools and data sets for time series analysis
library(fpp2)
#accessing the time series objects
#?ausbeer provides information about the quarterly data set ausbeer
?ausbeer
ausbeer[1:10] #data of the first ten quarters
y <- ts(c(123,39,78,52,110), start=2012)
y
y <- ts(c(123,39,78,52,110), start=2012, frequency = 4)
y
y <- ts(c(123,39,78,52,110), start=2012, frequency = 2)
y
y <- ts(c(123,39,78,52,110), start=2012, frequency = 12)
y
y <- ts(c(123,39,78,52,110), start= c(2012,1), frequency = 12)
y
y <- ts(c(123,39,78,52,110), start= c(2012,5), frequency = 12)
y
ausgdp <- ts(x, frequency=4, start=c(1971,3))
?ausgdp
autoplot(ausgdp)
elecsales
library(fpp2)
autoplot(melsyd[,"Economy.Class"])
type(melsyd)
class(melsyd)
?melsyd
melsyd
head(melsyd)
autplot(melsyd)
autoplot(melsyd)
autoplot(melsyd, facets = TRUE)
autoplot(melsyd[,"First.Class"])
colnames(melsyd)
?a10
head(a10)
autoplot(a10)
autoplot(a10) + ylab("$ million") + xlab("Year") +
ggtitle("Antidiabetic drug sales")
ggseasonplot(a10)
beer <- window(ausbeer,start=1992)
autoplot(beer)
ggseasonplot(beer,year.labels=TRUE)
autoplot(arrivals)
ggseasonplot(arrivals)
ggAcf(beer)
elec2 <- window(elec, start=1980)
autoplot(elec2)
ggseasonplot(arrivals)
ggseasonplot(arrivals[,"Japan"])
colnames(arrivals)
ggseasonplot(arrivals[,"NZ"])
